---

variables:
  SOUVAP_API_V4_URL: https://gitlab.souvap-univention.de/api/v4
  SOUVAP_DOCKER_ACCESS_USER: gitlab-ci-knut
  SOUVAP_HELM_ACCESS_USER: gitlab-ci-knut
  SOUVAP_HELM_PROJECT_ID: 75
  SOUVAP_REGISTRY_HOST: registry.souvap-univention.de
  SOUVAP_REGISTRY_PATH: souvap/tooling/images/univention-portal
  SOUVAP_REGISTRY_REPO: ${SOUVAP_REGISTRY_HOST}/${SOUVAP_REGISTRY_PATH}


include:
  - project: univention/customers/dataport/upx/common-ci
    file:
      - defaults/souvap-workflow.yaml
      - jobs/lint-pre-commit.yaml
      - jobs/package-and-publish-helm-charts.yaml


stages:
  - lint
  - prepare
  - build
  - test
  - trigger
  - package
  - publish


lint-pre-commit:
  before_script:
    # Compose lint would fail without the referenced env files
    - cp docker/.env.example docker/.env
    # Helm chart liniting needs the dependency charts present
    - |
      for helm_path in `find ./helm -mindepth 1 -maxdepth 1 -type d`; do
        helm dependency update $helm_path
      done


commit-message-linting:
  stage: lint
  needs: []
  image:
    name: "gitregistry.knut.univention.de/univention/customers/dataport/upx/container-pre-commit/upx-pre-commit:latest"
    entrypoint: [""]
  variables:
    PIP_CACHE_DIR: "${CI_PROJECT_DIR}/.cache/pip"
    PRE_COMMIT_HOME: "${CI_PROJECT_DIR}/.cache/pre-commit"
  cache:
    paths:
      - "${PIP_CACHE_DIR}"
      - "${PRE_COMMIT_HOME}"
  script:
    - |
      any_failure=0
      tmp_file="$(mktemp --tmpdir=.)"
      for x in $(git log --format="%H" "${CI_MERGE_REQUEST_DIFF_BASE_SHA}..${CI_COMMIT_SHA}")
      do
          echo "Checking commit message for $x"
          git log --format="%B" -n 1 "$x" > "$tmp_file"
          pre-commit run --hook-stage=commit-msg --commit-msg-filename="$tmp_file" \
              conventional-pre-commit || any_failure=1
      done
      rm "$tmp_file"
      exit "$any_failure"
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"


trigger-notifications-api:
  stage: trigger
  trigger:
    strategy: depend
    include:
      - local: 'notifications-api/.gitlab-ci.yml'
  rules:
    - changes:
        - 'notifications-api/**/*'
        - 'tests/**/*'


trigger-frontend:
  stage: trigger
  trigger:
    strategy: depend
    include:
      - local: 'frontend/.gitlab-ci.yml'
  rules:
    - changes:
        - 'frontend/**/*'
        - 'tests/**/*'


trigger-portal-server:
  stage: trigger
  trigger:
    strategy: depend
    include:
      - local: 'portal-server/.gitlab-ci.yml'
  rules:
    # TODO: Is everything covered here?
    - changes:
        - 'portal-server/**/*'
        - 'python/**/*'
        - 'udm/**/*'
        - 'unittests/**/*'
        - 'univention-portal'
        - 'univention-portal-server'
        - 'setup.py'
        - 'docker/portal-server/**/*'
        - 'tests/**/*'


# TODO: check if we can get rid of this already? Announcements?
trigger-debian-package:
  stage: trigger
  trigger:
    strategy: depend
    include:
      - local: '.gitlab-ci.debian.yml'
  rules:
    - changes:
        - 'portal-server/**/*'
        - 'python/**/*'
        - 'udm/**/*'
        - 'unittests/**/*'
        - 'univention-portal'
        - 'univention-portal-server'
        - 'setup.py'
        - 'docker/portal-server/**/*'
        - 'tests/**/*'
        - 'debian/**/*'
        - 'frontend/**/*'


...
