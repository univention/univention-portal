---

stages:
  - build
  - test
  - lint
  - get-demodata
  - master-env
  - master-deploy

cache: &global-cache
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - cypress_cache
    - yarn_cache
  policy: pull

build-portal-frontend:
  extends: .kaniko
  variables:
    DOCKERFILE_PATH: "docker/frontend/Dockerfile"
    CI_REGISTRY_IMAGE: "$CI_REGISTRY_IMAGE/portal-frontend"
  rules:
    - if: '$CI_PIPELINE_SOURCE != "merge_request_event"'

build-portal-server:
  extends: .kaniko
  variables:
    DOCKERFILE_PATH: "docker/portal-server/Dockerfile"
    CI_REGISTRY_IMAGE: "$CI_REGISTRY_IMAGE/portal-server"
  rules:
    - if: '$CI_PIPELINE_SOURCE != "merge_request_event"'

build-notification-api:
  extends: .kaniko
  variables:
    DOCKERFILE_PATH: "notifications-api/Dockerfile"
    KANIKO_BUILD_CONTEXT: "notifications-api"
    CI_REGISTRY_IMAGE: "$CI_REGISTRY_IMAGE/notification-api"
  rules:
    - if: '$CI_PIPELINE_SOURCE != "merge_request_event"'

build-portal-frontend-test-runner:
  extends: .kaniko
  variables:
    DOCKERFILE_PATH: "frontend/Dockerfile"
    CI_REGISTRY_IMAGE: "$CI_REGISTRY_IMAGE/portal-frontend-test-runner"
    KANIKO_BUILD_CONTEXT: "frontend"
    KANIKO_ARGS: "--target=test"
  rules:
    - if: '$CI_PIPELINE_SOURCE != "merge_request_event"'

build-portal-server-test-runner:
  extends: .kaniko
  variables:
    DOCKERFILE_PATH: "docker/portal-server/Dockerfile"
    CI_REGISTRY_IMAGE: "$CI_REGISTRY_IMAGE/portal-server-test-runner"
    KANIKO_ARGS: "--target=test"
  rules:
    - if: '$CI_PIPELINE_SOURCE != "merge_request_event"'

build-notification-api-test-runner:
  extends: .kaniko
  variables:
    DOCKERFILE_PATH: "notifications-api/Dockerfile"
    KANIKO_BUILD_CONTEXT: "notifications-api"
    CI_REGISTRY_IMAGE: "$CI_REGISTRY_IMAGE/notification-api-test-runner"
    KANIKO_ARGS: "--target=test"
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'


# Running tests

test-portal-frontend:
  needs:
    - job: build-portal-frontend-test-runner
  image: "$IMAGE_TAG"
  cache:
    key:
      files:
        - frontend/yarn.lock
    paths:
      - "${CI_PROJECT_DIR}/.cache"
  script:
    # TODO: This replaces ~/.cache with a symlink, so that Gitlab's caching is
    # able to grab the files. This has to be replaced by a more correct
    # solution.
    - mkdir -p .cache
    - rm -fr ~/.cache
    - ln -s "${CI_PROJECT_DIR}/.cache" ~/.cache
    - cd frontend
    - yarn install --frozen-lockfile
    - yarn lint
    - yarn test:unit

test-portal-server:
  needs:
    - job: build-portal-server-test-runner
  image: "$IMAGE_TAG"
  variables:
    PYTHONPATH: "./python:/usr/lib/python3/dist-packages"
  script:
    - pytest unittests

test-notification-api:
  needs:
    - job: build-notification-api-test-runner
  image: "$IMAGE_TAG"
  script:
    - cd notifications-api
    - pytest --cov=app --cov-report=term --cov-report=xml:coverage.xml
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: notifications-api/coverage.xml
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'


# Linting related checks and builds

# TODO: The pre-commit image is missing hadolint, that's why we are building our
# own one here until it is integrated upstream.
#
# Compare: https://git.knut.univention.de/univention/dist/docker-services

build-linter:
  extends: .kaniko
  variables:
    DOCKERFILE_PATH: docker/linter-pre-commit/Dockerfile
    KANIKO_BUILD_CONTEXT: docker/linter-pre-commit/
    CI_REGISTRY_IMAGE: "$CI_REGISTRY_IMAGE/pre-commit"
  rules:
    - if: '$CI_PIPELINE_SOURCE != "merge_request_event"'

pre-commit-linting:
  needs:
    - job: build-linter
  image: "$IMAGE_TAG"
  variables:
    PIP_CACHE_DIR: "${CI_PROJECT_DIR}/.cache/pip"
    PRE_COMMIT_HOME: "${CI_PROJECT_DIR}/.cache/pre-commit"
  cache:
    <<: *global-cache
  dependencies: []
  image: artifacts.knut.univention.de/dockerhub_proxy_cache/library/node:16.3-buster
  variables:
    CYPRESS_CACHE_FOLDER: $CI_PROJECT_DIR/cypress_cache
    YARN_CACHE_FOLDER: $CI_PROJECT_DIR/yarn_cache

.prepare_ansible: &prepare_ansible
  # Include univention CA certificate
  - curl -k https://nissedal.knut.univention.de/ucs-root-ca.crt > /usr/local/share/ca-certificates/ucs-root-ca.crt
  - update-ca-certificates

  # Run ssh-agent (inside the build environment)
  - eval $(ssh-agent -s)

  # Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
  # We're using tr to fix line endings which makes ed25519 keys work
  # without extra base64 encoding.
  # https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
  - echo "${ID_RSA_UCS_KVM_IMAGE}" | tr -d '\r' | ssh-add -
  - echo "${ID_RSA_UCS_KVM_IMAGE}" > ${CI_PROJECT_DIR}/ci/id_rsa_ucs_kvm_image

  # Create the SSH directory and give it the right permissions
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh

  # Store vault-password
  - echo $ANSIBLE_VAULT_PASSWORD > ~/.vault-password

  # Change permission for ansible
  # For more information see https://docs.ansible.com/ansible/devel/reference_appendices/config.html#cfg-in-world-writable-dir
  - chmod -R o-w .
  - chmod -R ug+rw .

  # Install dependencies
  - ansible-galaxy install -r ${CI_PROJECT_DIR}/ci/collections/requirements.yml

  # Create inventory
  - mkdir -p ${CI_PROJECT_DIR}/ci/inventory/
  - |
    cat << EOF > ${CI_PROJECT_DIR}/ci/inventory/univention
    [all]
    ${CI_COMMIT_REF_SLUG} ansible_user=univention_ansible ansible_host="${MASTER_SERVER_IP}" ansible_ssh_host="${MASTER_SERVER_IP}"
    EOF
  - cat ${CI_PROJECT_DIR}/ci/inventory/univention

  # Create hostvars for master
  - mkdir -p "${CI_PROJECT_DIR}/ci/inventory/host_vars/${CI_COMMIT_REF_SLUG}"
  - |
    cat << EOF > ${CI_PROJECT_DIR}/ci/inventory/host_vars/${CI_COMMIT_REF_SLUG}/ucs.yml
    server_type: "master"
    network_config_static_ip_config: "${MASTER_SERVER_IP}/32"
    EOF
  - cat "${CI_PROJECT_DIR}/ci/inventory/host_vars/${CI_COMMIT_REF_SLUG}/ucs.yml"

build-nodejs:
  artifacts:
    expire_in: 7 days
    paths:
      - dist
  cache:
    <<: *global-cache
    policy: pull-push
  extends: .node-template
  needs: []
  script:
    - yarn build
  stage: build

build-deb:
  artifacts:
    when: always
    paths:
      - phoenixportal*.deb
    expire_in: 7 days
  cache: {}
  image: docker-registry.knut.univention.de/phoenix/phoenixportalbuilder:node-14.17
  needs: []
  script:
    - dpkg-buildpackage -uc -us -b
    - cp ../*.deb .
  stage: build

test-cypress:
  artifacts:
    when: always
    paths:
      - tests/e2e/videos/**/*.mp4
      - tests/e2e/screenshots/**/*.png
    expire_in: 1 day
  extends: .node-template
  image: artifacts.knut.univention.de/dockerhub_proxy_cache/cypress/browsers:node14.17.0-chrome88-ff89
  needs:
    - build-nodejs
  script:
    - yarn test:e2e:headless --browser chrome
  stage: test

test-unit:
  extends: .node-template
  needs:
    - build-nodejs
  script:
    - yarn --cwd=frontend test:unit
  stage: test

lint:
  allow_failure: true
  extends: .node-template
  needs:
    - build-nodejs
  script:
    - yarn lint:all
  stage: lint

.remove-env-instance: &remove-env-instance
  - terraform refresh
  - terraform destroy -auto-approve

.environment-common:
  before_script:
    - rm -rf ${CI_BUILDS_DIR}/terraform
    - git -c http.sslVerify=false clone --single-branch --branch main --depth=1 https://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}/univention/customers/dataport/deployment/terraform-ionos ${CI_BUILDS_DIR}/terraform
    - cd ${TF_ROOT}
    - |
      terraform init \
      -backend-config="address=${TF_ADDRESS}" \
      -backend-config="lock_address=${TF_ADDRESS}/lock" \
      -backend-config="unlock_address=${TF_ADDRESS}/lock" \
      -backend-config="username=terraform-state" \
      -backend-config="password=${GL_TOKEN}" \
      -backend-config="lock_method=POST" \
      -backend-config="unlock_method=DELETE" \
      -backend-config="retry_wait_min=5" \
      -backend-config="skip_cert_verification=true"
  image: artifacts.knut.univention.de/upx/container-tooling/automation-terraform:main-ecb2bd5d
  variables:
    HOSTING_PROVIDER: hetzner
    TF_ROOT: ${CI_BUILDS_DIR}/terraform/${HOSTING_PROVIDER}/ucs-automation-named

master-env:
  after_script:
    - cd ${TF_ROOT}
    - MASTER_SERVER_IP=$(terraform refresh -lock=false | grep -Po '(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)')
    - echo "MASTER_SERVER_IP=${MASTER_SERVER_IP}" > ${CI_PROJECT_DIR}/deploy.env
    - cat ${CI_PROJECT_DIR}/deploy.env
  artifacts:
    reports:
      dotenv: ${CI_PROJECT_DIR}/deploy.env
  environment:
    name: ${CI_COMMIT_REF_NAME}
    url: https://${CI_COMMIT_REF_SLUG}.upx.mydemoenv.net
    on_stop: master-stop-env
    auto_stop_in: 4 hours
  extends: .environment-common
  needs:
    - build-deb
  resource_group: ${CI_COMMIT_REF_SLUG}
  script:
    - *remove-env-instance
    - terraform apply -auto-approve -var snapshot=54479140 -var ssh-keys=["4820687"] -var create-dns-record=false -var project-id=${CI_PROJECT_ID} -var dns-record=${CI_COMMIT_REF_SLUG}.upx
    - terraform apply -auto-approve -var snapshot=54479140 -var ssh-keys=["4820687"] -var create-dns-record=true -var project-id=${CI_PROJECT_ID} -var dns-record=${CI_COMMIT_REF_SLUG}.upx
  stage: master-env
  variables:
    TF_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/${CI_COMMIT_REF_SLUG}

master-deploy:
  before_script:
    *prepare_ansible
  dependencies:
    - master-env
    - build-deb
  image: artifacts.knut.univention.de/upx/container-tooling/automation-ansible:main-41a9520a
  needs:
    - build-deb
    - master-env
  resource_group: ${CI_COMMIT_REF_SLUG}
  script:
    - export PACKAGE_NAME="$(set -- *.deb; echo "$1")"
    - rm -rf ${CI_BUILDS_DIR}/demodata
    - git -c http.sslVerify=false clone --single-branch --branch main --depth=1 https://gitlab-ci-token:${CI_JOB_TOKEN}@git.knut.univention.de/univention/customers/dataport/upx/portal/ci-demodata ${CI_BUILDS_DIR}/demodata
    - cd ${CI_PROJECT_DIR}/ci/
    - ansible-playbook playbook.yml -l ${CI_COMMIT_REF_SLUG} -i inventory/univention -v
  stage: master-deploy

master-stop-env:
  environment:
    name: ${CI_COMMIT_REF_NAME}
    action: stop
  extends: .environment-common
  script:
    - *remove-env-instance
    # Delete terraform state (maintainer permission needed)
    - curl -k --header "Private-Token:${GL_TOKEN}" --request DELETE ${TF_ADDRESS}
  stage: master-env
  variables:
    TF_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/${CI_COMMIT_REF_SLUG}
  when: manual
