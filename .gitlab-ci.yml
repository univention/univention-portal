include:
  - project: univention/dist/docker-services
    file: kaniko.yml


# Building artifacts

build-portal-frontend:
  extends: .kaniko
  variables:
    DOCKERFILE_PATH: "docker/frontend/Dockerfile"
  rules:
    - if: '$CI_PIPELINE_SOURCE != "merge_request_event"'

build-portal-server:
  extends: .kaniko
  variables:
    DOCKERFILE_PATH: "docker/portal-server/Dockerfile"
  rules:
    - if: '$CI_PIPELINE_SOURCE != "merge_request_event"'


# Linting related checks and builds

# TODO: The pre-commit image is missing hadolint, that's why we are building our
# own one here until it is integrated upstream.
#
# Compare: https://git.knut.univention.de/univention/dist/docker-services

build-linter:
  extends: .kaniko
  variables:
    DOCKERFILE_PATH: docker/linter-pre-commit/Dockerfile
    KANIKO_BUILD_CONTEXT: docker/linter-pre-commit/
    CI_REGISTRY_IMAGE: "$CI_REGISTRY_IMAGE/pre-commit"
  rules:
    - if: '$CI_PIPELINE_SOURCE != "merge_request_event"'

pre-commit-linting:
  needs:
    - job: build-linter
  image: "$IMAGE_TAG"
  variables:
    PIP_CACHE_DIR: "${CI_PROJECT_DIR}/.cache/pip"
    PRE_COMMIT_HOME: "${CI_PROJECT_DIR}/.cache/pre-commit"
  cache:
    paths:
    - "${PIP_CACHE_DIR}"
    - "${PRE_COMMIT_HOME}"
  script:
    # Compose lint would fail without the referenced env files
    - for i in docker/.env.*.example; do cp "${i}" "${i/.example}"; done
    - pre-commit run --all-files

commit-message-linting:
  image: docker-registry.knut.univention.de/knut/pre-commit:latest
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  variables:
    PIP_CACHE_DIR: "${CI_PROJECT_DIR}/.cache/pip"
    PRE_COMMIT_HOME: "${CI_PROJECT_DIR}/.cache/pre-commit"
  cache:
    paths:
    - "${PIP_CACHE_DIR}"
    - "${PRE_COMMIT_HOME}"
  script:
    - |
      any_failure=0
      tmp_file="$(mktemp --tmpdir=.)"
      for x in $(git log --format="%H" "${CI_MERGE_REQUEST_DIFF_BASE_SHA}..${CI_COMMIT_SHA}")
      do
          echo "Checking commit message for $x"
          git log --format="%B" -n 1 "$x" > "$tmp_file"
          pre-commit run --hook-stage=commit-msg --commit-msg-filename="$tmp_file" \
              conventional-pre-commit || any_failure=1
      done
      rm "$tmp_file"
      exit "$any_failure"
