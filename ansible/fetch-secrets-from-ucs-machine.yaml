---

# SPDX-FileCopyrightText: 2023-2024 Univention GmbH
# SPDX-License-Identifier: AGPL-3.0-only

- name: Fetch secrets from UCS machine
  hosts: ucs_primary

  tasks:
    - name: Fetch LDAP password
      ansible.builtin.fetch:
        src: /etc/ldap.secret
        dest: ../docker/secret/ldap.secret
        flat: true

    - name: Fetch machine.secret
      ansible.builtin.fetch:
        src: /etc/machine.secret
        dest: ../docker/secret/machine.secret
        flat: true

    - name: Fetch idp-ldap-user.secret
      ansible.builtin.fetch:
        src: /etc/idp-ldap-user.secret
        dest: ../docker/secret/idp-ldap-user.secret
        flat: true

    - name: Register machine secret
      ansible.builtin.slurp:
        src: /etc/machine.secret
      register: machine_secret

    - name: Register LDAP password
      ansible.builtin.slurp:
        src: /etc/ldap.secret
      register: ldap_secret

    - name: Fetch CAcert.pem
      ansible.builtin.fetch:
        src: /etc/univention/ssl/ucsCA/CAcert.pem
        dest: ../docker/ssl/certs/CAcert.pem
        flat: true

    - name: Register CAcert.pem
      ansible.builtin.slurp:
        src: /etc/univention/ssl/ucsCA/CAcert.pem
      register: ca_cert

    - name: Fetch cert.pem
      ansible.builtin.fetch:
        src: /etc/univention/ssl/{{ ansible_fqdn }}/cert.pem
        dest: ../docker/ssl/certs/cert.pem
        flat: true

    - name: Register cert.pem
      ansible.builtin.slurp:
        src: /etc/univention/ssl/{{ ansible_fqdn }}/cert.pem
      register: cert_pem

    - name: Fetch private.key
      ansible.builtin.fetch:
        src: /etc/univention/ssl/{{ ansible_fqdn }}/private.key
        dest: ../docker/ssl/certs/private.key
        flat: true

    - name: Register LDAP base from UCR
      ansible.builtin.command: ucr get ldap/base
      register: ldap_base

    - name: Register LDAP host dn from UCR
      ansible.builtin.command: ucr get ldap/hostdn
      register: ldap_hostdn

    - name: Register LDAP portal_default_dn from UCR
      ansible.builtin.command: ucr get portal/default-dn
      register: portal_default_dn

    - name: Register local hostname
      ansible.builtin.command: hostname -s
      register: local_hostname
      delegate_to: localhost

    - name: Register local domainname
      ansible.builtin.command: hostname -d
      register: local_domainname
      delegate_to: localhost

    - name: Register local operating system
      ansible.builtin.command: uname -s
      register: local_os
      delegate_to: localhost

    - name: Configure .env.listener
      ansible.builtin.template:
        src: ./templates/dotenv.listener.j2
        dest: ../docker/.env.listener
      delegate_to: localhost

    - name: Configure .env.umc-gateway
      ansible.builtin.template:
        src: ./templates/dotenv.umc-gateway.j2
        dest: ../docker/.env.umc-gateway
      delegate_to: localhost

    - name: Configure .env.umc-server
      ansible.builtin.template:
        src: ./templates/dotenv.umc-server.j2
        dest: ../docker/.env.umc-server
      delegate_to: localhost

    - name: Configure .env.keycloak
      ansible.builtin.template:
        src: ./templates/dotenv.keycloak.j2
        dest: ../docker/.env.keycloak
      delegate_to: localhost

    - name: Configure docker-compose.override.yaml
      ansible.builtin.template:
        src: ./templates/docker-compose.override.yaml.j2
        dest: ../docker/docker-compose.override-generated.yaml
      delegate_to: localhost

    # Assembling the file on the UCS machine since the hashing functions
    # cause trouble on some local systems.
    - name: Create store-dav htpasswd file - portal-server
      community.general.htpasswd:
        path: /tmp/store-dav-htpasswd
        name: portal-server
        password: "{{ ucs_auth_secret }}"

    - name: Create store-dav htpasswd file - portal-listener
      community.general.htpasswd:
        path: /tmp/store-dav-htpasswd
        name: portal-listener
        password: "{{ ucs_auth_secret }}"

    - name: Fetch store-dav htpasswd file
      ansible.builtin.fetch:
        src: /tmp/store-dav-htpasswd
        dest: ../docker/secret/store-dav-htpasswd
        flat: true

    - name: Provide Helm values
      ansible.builtin.template:
        src: ./templates/values-portal-listener-generated.yaml.j2
        dest: ../helm/values-portal-listener-generated.yaml
      delegate_to: localhost

...
