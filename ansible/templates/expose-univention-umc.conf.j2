#
# Expose UMC endpoints to the containerized portal-server
#
# - Overwrites part of the logic of
#   /etc/apache2/sites-enabled/univention.conf
# - Generated by ansible
#
# The UMC webserver expects the portal-server to reside at localhost.
#
# This workaround exposes the UMC endpoints additionally via /univention/umc-internal.
# Any access there requires basic auth using a shared secret with the portal-server.
# Then it makes the request look like it was proxied from localhost to mitigate the security
# checks of UMC's webserver.
#
# See docs/decisions/0007-basic-auth-with-umc.md for more information.
#

<LocationMatch "^/univention/internal/umc/((auth|saml|get|set|command|upload|logout)/?.*)$">
    ProxyAddHeaders Off

    # Add a basic auth with a secret shared known only to the portal-server.
    AuthType Basic
    AuthName "UMC Internal"
    AuthUserFile /etc/apache2/portal_auth.passwd
    Require valid-user

    # Remove the Authorization header, to avoid confusing the UMC
    RequestHeader unset authorization

    # Pretend that anyone passing the authorization is from the local machine
    # to satisfy the origin check of the UMC's webserver.
    RequestHeader set X-Forwarded-For 127.0.0.1
</LocationMatch>

# now pass the request to the UMC, like in /etc/apache2/sites-enabled/univention.conf
ProxyPassMatch "^/univention/internal/umc/((auth|saml|get|set|command|upload|logout)/?.*)$" http://127.0.0.1:8090/$1 retry=0 timeout=311
ProxyPassReverse "^/univention/internal/umc/((auth|saml|get|set|command|upload|logout)/?.*)$" http://127.0.0.1:8090/
