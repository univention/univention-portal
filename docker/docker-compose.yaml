---

name: "dev-local"

x-portal-environment:
  &portal-environment
  PORTAL_SERVER_ADMIN_GROUP: "cn=Domain Admins,cn=groups,dc=univention,dc=test"
  PORTAL_SERVER_ASSETS_ROOT: "http://portal-server:univention@store-dav/portal-assets/"
  PORTAL_SERVER_AUTH_MODE: "ucs"
  PORTAL_SERVER_EDITABLE: "true"
  PORTAL_SERVER_PORT: "80"
  PORTAL_SERVER_UCS_INTERNAL_URL: "http://portal-server:univention@store-dav/portal-data/"
  PORTAL_SERVER_UMC_GET_URL: "http://${DOCKER_HOST_INTERNAL}:${PROXY_PORT}/univention/get"
  PORTAL_SERVER_UMC_SESSION_URL: "http://${DOCKER_HOST_INTERNAL}:${PROXY_PORT}/univention/get/session-info"
  PORTAL_LISTENER_LOG_STREAM: "true"

# Cannot be in the services section currently.
# See https://github.com/docker/compose/issues/8809
x-portal-listener-base:
  &portal-listener-base
  platform: "linux/amd64"
  build:
    context: ../
    dockerfile: docker/portal-listener/Dockerfile
  env_file: .env.listener
  environment:
    <<: *portal-environment
  depends_on:
    store-dav:
      condition: service_started
  secrets:
    - ca_cert
    - cert_pem
    - ldap_secret
    - machine_secret
  volumes:
    - listener-data:/var/lib/univention-directory-listener/:rw

services:
  # The frontend of the Portal. The context directory contains more details.
  portal-frontend:
    build:
      context: ../frontend
    ports:
      - "8080:80"

  # The server of the Potral. See "./portal-server/" regarding further details.
  portal-server:
    platform: "linux/amd64"
    build:
      context: ../
      dockerfile: docker/portal-server/Dockerfile
    ports:
      - "8095:80"
    depends_on:
      umc-server:
        condition: service_started
    environment:
      <<: *portal-environment

  portal-listener-init:
    <<: *portal-listener-base
    command: "/initialize.sh"

  portal-listener:
    <<: *portal-listener-base
    depends_on:
      portal-listener-init:
        condition: service_completed_successfully

  store-dav:
    image: gitregistry.knut.univention.de/univention/customers/dataport/upx/container-store-dav/store-dav:latest
    ports:
      - "8081:80"
    secrets:
      - source: store_dav_htpasswd
        target: /etc/nginx/conf/htpasswd
    volumes:
      - type: volume
        source: store-dav-data
        target: /data
    networks:
      default:
        aliases:
          - store-dav

  # The UMC server.
  umc-server:
    image: gitregistry.knut.univention.de/univention/customers/dataport/upx/container-umc/umc-server:branch-tkintscher-helm-charts
    platform: linux/amd64
    ports:
      - 8090:8090
    volumes:
      - umc-acls:/var/cache/univention-management-console/acls/
    env_file: .env.umc-server
    secrets:
      - ca_cert
      - cert_pem
      - private_key
      - ldap_secret
      - machine_secret
    depends_on:
      keycloak:
        condition: service_healthy

  # The UMC "gateway", keeper of the UMC's static assets.
  umc-gateway:
    image: gitregistry.knut.univention.de/univention/customers/dataport/upx/container-umc/umc-gateway:latest
    platform: linux/amd64
    ports:
      - 8091:80
    env_file: .env.umc-gateway

  # The notifications API of the Portal. The context directory contains more
  # details.
  notifications-api:
    build:
      context: ../notifications-api
    restart: on-failure
    depends_on:
      - db
    environment:
      DATABASE_URL: "postgresql://dev:devpassword@db/dev"
      APPLY_DATABASE_MIGRATIONS: true
      ROOT_PATH: "/univention/portal/notifications-api"
    ports:
      - 8096:8080

  # The reverse proxy to support the local setup. The context directory contains
  # more details.
  reverse-proxy:
    build:
      context: ./reverse-proxy
    environment:
      NOTIFICATIONS_BASE_URL: "http://${DOCKER_HOST_INTERNAL}:8096"
      PORTAL_FRONTEND_BASE_URL: "http://${DOCKER_HOST_INTERNAL}:8080"
      PORTAL_ICONS_URL: "http://store-dav/portal-assets/icons/"
      PORTAL_SERVER_BASE_URL: "http://${DOCKER_HOST_INTERNAL}:8095"
      STORE_DAV_URL: "http://store-dav"
      UMC_SERVER_BASE_URL: "http://${DOCKER_HOST_INTERNAL}:8090"
      UMC_GATEWAY_BASE_URL: "http://umc-gateway"
      UCS_BASE_URL: "${UCS_BASE_URL}"
      PROXY_PORT: "${PROXY_PORT}"
    ports:
      - "${PROXY_PORT}:80"

  # The database is needed by the notifications API.
  db:
    image: postgres:12.13-alpine
    environment:
      POSTGRES_PASSWORD: "devpassword"
      POSTGRES_USER: "dev"
    volumes:
      - type: volume
        source: postgresql-data
        target: /var/lib/postgresql/data
    ports:
      - 5432:5432

  # A keycloak instance to allow simulating a login process based on keycloak
  # for the Portal. The context directory contains more details.
  keycloak:
    build:
      context: ../
      dockerfile: docker/keycloak/Dockerfile
    ports:
      - 8097:8080
    env_file: .env.keycloak
    secrets:
      - idp_ldap_user_secret

  # The test runner of the Portal Server.
  test:
    profiles:
      - test
    platform: "linux/amd64"
    build:
      context: ../
      dockerfile: docker/portal-server/Dockerfile
      target: test
    container_name: univention-portal-server-test
    environment:
      # TODO: "dist-packages" part required due to custom interpreter
      PYTHONPATH: "./python:/usr/lib/python3/dist-packages"
    volumes:
      - type: bind
        source: ../python
        target: /staging/python
      - type: bind
        source: ../listener
        target: /staging/listener
      - type: bind
        source: ../unittests
        target: /staging/unittests

  # Environment to build the Debian package. The context directory contains more
  # details.
  deb-builder:
    profiles:
      - test
    platform: "linux/amd64"
    build:
      context: ./deb-build
    volumes:
      - type: bind
        source: ../
        target: /src

  # Environment of the pre-commit linter.
  pre-commit:
    profiles:
      - test
    image: gitregistry.knut.univention.de/univention/customers/dataport/upx/container-pre-commit/upx-pre-commit:latest
    volumes:
      - type: bind
        source: ..
        target: /code
      - type: volume
        # pre-commit installs dependencies, having them cached speeds things up
        # a lot.
        source: pre-commit-cache
        target: /cache

  # Environment which allows to run the tool "helm-docs". See the directory
  # "../helm/" for more details.
  helm-docs:
    profiles:
      - test
    image: "jnorwood/helm-docs:v1.11.0"
    command: "-c helm"
    volumes:
      - type: bind
        source: ..
        target: /helm-docs

  # For running e2e tests in the CI pipeline
  e2e-tests:
    container_name: e2e-tests
    image: e2e-tests:develop
    init: true # https://playwright.dev/docs/ci#docker
    build:
      context: ../tests/e2e
    depends_on:
      - portal-frontend
      - portal-server
      - notifications-api
      - db
      - reverse-proxy
      - umc-gateway
      - store-dav
    network_mode: host
    command: pytest --video retain-on-failure --tracing retain-on-failure --screenshot only-on-failure


secrets:
  ca_cert:
    file: ssl/certs/CAcert.pem
  cert_pem:
    file: ssl/certs/cert.pem
  private_key:
    file: ssl/certs/private.key
  idp_ldap_user_secret:
    file: secret/ldap.secret
  ldap_secret:
    file: secret/idp-ldap-user.secret
  machine_secret:
    file: secret/machine.secret
  store_dav_htpasswd:
    file: secret/store-dav-htpasswd

volumes:
  listener-data:
  postgresql-data:
  pre-commit-cache:
  store-dav-data:
  umc-acls:


...
