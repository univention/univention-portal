# SPDX-License-Identifier: AGPL-3.0-only
# SPDX-FileCopyrightText: 2023-2024 Univention GmbH

---
{{ include "common.configMap" (dict "top" . "overrides" "portal-listener.configMap") }}

{{- define "portal-listener.configMap" }}
{{- with .top }}
data:
  DOMAIN_NAME: "{{ .Values.portalListener.domainName }}"
  ENVIRONMENT: "{{ .Values.portalListener.environment }}"
  LDAP_BASE_DN: "{{ .Values.portalListener.ldapBaseDn }}"
  LDAP_PASSWORD: "{{ .Values.portalListener.ldapSecret }}"
  LDAP_PASSWORD_FILE: "{{ .Values.portalListener.ldapSecretFile }}"
  LDAP_HOST: "{{ .Values.portalListener.ldapHost }}"
  LDAP_HOST_DN: "{{ .Values.portalListener.ldapHostDn }}"
  LDAP_PORT: "{{ .Values.portalListener.ldapPort }}"
  LOG_LEVEL: "{{ .Values.portalListener.logLevel }}"
  MACHINE_SECRET_FILE: "{{ .Values.portalListener.machineSecretFile }}"
  NOTIFIER_SERVER: "{{ .Values.portalListener.notifierServer }}"
  DEBUG_LEVEL: "{{ .Values.portalListener.debugLevel }}"
  PORTAL_DEFAULT_DN: "{{ .Values.portalListener.portalDefaultDn }}"
  PORTAL_LISTENER_LOG_STREAM: "true"
  PORTAL_SERVER_ADMIN_GROUP: {{ required "The parameter \"portalListener.adminGroup\" is required." .Values.portalListener.adminGroup | quote }}
  PORTAL_SERVER_ASSETS_ROOT_PATH: "{{ .Values.portalListener.assetsRootPath }}"
  PORTAL_SERVER_AUTH_MODE: "{{ .Values.portalListener.authMode }}"
  PORTAL_SERVER_EDITABLE: "{{ .Values.portalListener.editable }}"
  PORTAL_SERVER_PORT: "{{ .Values.portalListener.port }}"
  PORTAL_SERVER_UCS_INTERNAL_PATH: {{ required "The parameter \"portalListener.ucsInternalPath\" is required." .Values.portalListener.ucsInternalPath | quote }}
  PORTAL_SERVER_UMC_GET_URL: {{ required "The parameter \"portalListener.umcGetUrl\" is required." .Values.portalListener.umcGetUrl | quote }}
  PORTAL_SERVER_UMC_SESSION_URL: {{ required "The parameter \"portalListener.umcSessionUrl\" is required." .Values.portalListener.umcSessionUrl | quote }}
  PORTAL_UDM_API_URL: "{{ .Values.portalListener.udmApiUrl }}"
  PORTAL_UDM_API_USERNAME: "{{ .Values.portalListener.udmApiUsername }}"
  PORTAL_UDM_API_PASSWORD_FILE: "{{ .Values.portalListener.udmApiSecretFile }}"
  OBJECT_STORAGE_ENDPOINT: "{{ .Values.portalListener.objectStorageEndpoint }}"
  OBJECT_STORAGE_BUCKET: "{{ .Values.portalListener.objectStorageBucket }}"
  OBJECT_STORAGE_ACCESS_KEY_ID: "{{ .Values.portalListener.objectStorageAccessKeyId }}"
  OBJECT_STORAGE_SECRET_ACCESS_KEY: "{{ .Values.portalListener.objectStorageSecretAccessKey }}"
  CA_CERT: "{{ .Values.portalListener.caCert }}"
  CA_CERT_FILE: "{{ .Values.portalListener.caCertFile }}"
  TLS_MODE: "{{ .Values.portalListener.tlsMode }}"
  wait-for-ldap.sh: |
    #!/bin/bash
    set -euxo pipefail

    while ! ldapsearch -H ldap://$LDAP_HOST -D $LDAP_HOST_DN -y $LDAP_PASSWORD_FILE -b "" -s base -LLL; do
      echo "Checking if LDAP Server can be reached..."
      sleep 2
    done

    echo "Success, the LDAP Server is available"
  wait-for-udm.sh: |
    #!/bin/bash
    # TODO: find a way to not leak the udm passwort into the log
    set -euxo pipefail

    while ! curl -o- --fail --header "Accept: application/json" --user "${PORTAL_UDM_API_USERNAME}:$(cat $PORTAL_UDM_API_PASSWORD_FILE)" "${PORTAL_UDM_API_URL}ldap/base/"; do
      echo "Checking if the UDM REST API can be reached..."
      sleep 2
    done

    echo "Success, the UDM REST API is available"
  wait-for-object-store.sh: |
    #!/bin/bash
    set -euxo pipefail

    while ! curl -o- --fail "${OBJECT_STORAGE_ENDPOINT}/minio/health/live"; do
      echo "Checking if object-store can be reached..."
      sleep 2
    done

    echo "Success, object-store is available"
{{- end }}
{{- end }}
