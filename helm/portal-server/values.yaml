---
# Default values for univention-portal-server.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## Global values
affinity: {}
environment: {}
fullnameOverride: ""
nameOverride: ""
nodeSelector: {}
podAnnotations: {}
podSecurityContext: {}
replicaCount: 1
securityContext: {}
tolerations: []
mountSecrets: true

# -- Application configuration of the Portal Server
portalServer:
  # -- Define LDAP Admin Group.
  # Example: `"cn=Domain Admins,cn=groups,dc=example,dc=com"`
  adminGroup: null
  # -- Define the authentication mode for the portal. Use "ucs" or "saml".
  authMode: "ucs"
  # -- Defines if members of the Admin group can use the edit mode in the portal.
  editable: "true"
  # -- TODO: Clarify usage of this parameter
  environment: "production"
  # -- TODO: Clarify usage of this parameter
  logLevel: "WARNING"
  port: 80
  # -- Define UCS internal endpoint.
  # Example: `"https://portal.example.com/univention/internal"`
  ucsInternalUrl: null
  # -- Define UMC get endpoint.
  # Example: `"https://portal.example.com/univention/internal/umc/get"`
  umcGetUrl: null
  # -- Define UMC session-info" endpoint.
  # Example: `"https://portal.example.com/univention/internal/umc/get/session-info"`
  umcSessionUrl: null
  centralNavigation:
    # -- Activate the SecretAuthenticator for the portal.
    enabled: false
    # -- Provide a custom secret, if no value is provided, a random string is generated instead.
    authenticatorSecret: null

## Kubernetes ingress
ingress:
  # -- Set this to `true` in order to enable the installation on Ingress related objects.
  enabled: true
  ingressClassName: "nginx"
  annotations:
    nginx.org/mergeable-ingress-type: "minion"
  # -- The hostname. This parameter has to be supplied. Example `portal.example`.
  host: null
  paths:
    - pathType: "Exact"
      path: "/univention/portal/portal.json"
    - pathType: "Exact"
      path: "/univention/portal/navigation.json"
  tls:
    enabled: true
    secretName: ""

## Istio support
istio:
  # -- Set this to `true` in order to enable the installation on Istio related objects.
  enabled: false
  # -- The hostname. This parameter has to be supplied. Example `portal.example`.
  host: null
  virtualService:
    enabled: true
    annotations:
    paths:
      - match: "exact"
        path: "/univention/portal/navigation.json"
      - match: "exact"
        path: "/univention/portal/portal.json"
  gateway:
    enabled: false
    annotations:
    selectorIstio: "ingressgateway"
    externalGatewayName: "swp-istio-gateway"
    tls:
      enabled: true
      httpsRedirect: true
      secretName: ""

## Docker image
image:
  registry: "registry.souvap-univention.de"
  repository: "souvap/tooling/images/univention-portal/portal-server"
  imagePullPolicy: "Always"
  tag: "latest"

  ## Define image sha256 as an alternative to `tag`
  # sha256:

## Container deployment probes
probes:
  liveness:
    enabled: true
    initialDelaySeconds: 120
    timeoutSeconds: 3
    periodSeconds: 30
    failureThreshold: 3
    successThreshold: 1

  readiness:
    enabled: true
    initialDelaySeconds: 30
    timeoutSeconds: 3
    periodSeconds: 15
    failureThreshold: 30
    successThreshold: 1

## Deployment resources
resources:
  requests:
    memory: "512Mi"
    cpu: "250m"
  limits:
    memory: "4Gi"
    cpu: "4"

## Kubernetes Service
service:
  enabled: true
  type: "ClusterIP"
  ports:
    http:
      containerPort: 80
      port: 80
      protocol: "TCP"

  sessionAffinity:
    enabled: false
    timeoutSeconds: 10800
