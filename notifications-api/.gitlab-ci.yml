stages:
  - prepare
  - lint
  - build
  - test
  - package
  - publish

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "parent_pipeline"

include:
  - project: univention/dist/docker-services
    file: kaniko.yml
  - project: univention/customers/dataport/upx/common-ci
    file:
      - templates/souvap.yaml


build-notifications-api-test-runner:
  stage: prepare
  extends:
    - .kaniko
  needs: []
  variables:
    DOCKERFILE_PATH: "notifications-api/Dockerfile"
    CI_REGISTRY_IMAGE: "$CI_REGISTRY_IMAGE/notifications-api-test-runner"
    KANIKO_ARGS: "--target=test"
    KANIKO_BUILD_CONTEXT: "notifications-api"
  # before_script:
  #   # derived from the .kaniko_pre to define the IMAGE_TAG and IMAGE_VERSION
  #   - |-
  #     if [ "${CI_COMMIT_REF_NAME:-}" = "${CI_DEFAULT_BRANCH:-}" ]; then
  #       VERSION="latest"
  #     elif [ -n "${CI_COMMIT_TAG:-}" ]; then
  #       NOSLASH=$(echo "${CI_COMMIT_TAG:-}" | tr -s / -)
  #       SANITIZED="${NOSLASH//[^a-zA-Z0-9\-\.]/}"
  #       VERSION="$SANITIZED"
  #     else
  #       NOSLASH=$(echo "${CI_COMMIT_REF_NAME:-}" | tr -s / -)
  #       SANITIZED="${NOSLASH//[^a-zA-Z0-9\-]/}"
  #       VERSION="branch-$SANITIZED"
  #     fi
  #     if [ ! -z "${IMAGE_TAG:-}" ]; then
  #       IMAGE_TAG="${CI_REGISTRY_IMAGE:-}:$VERSION"
  #     fi
  #   - echo "IMAGE_TAG=$IMAGE_TAG" | tee -a ./.env
  #   - echo "IMAGE_VERSION=$VERSION" | tee -a ./.env


build-notifications-api:
  stage: build
  extends:
    - .kaniko
  needs: []
  variables:
    DOCKERFILE_PATH: "notifications-api/Dockerfile"
    CI_REGISTRY_IMAGE: "$CI_REGISTRY_IMAGE/notifications-api"
    KANIKO_BUILD_CONTEXT: "notifications-api"


test-notifications-api:
  stage: test
  needs:
    - job: build-notifications-api-test-runner
  image: "$IMAGE_TAG"
  script:
    - cd notifications-api
    - pytest --cov=app --cov-report=term --cov-report=xml:coverage.xml
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: notifications-api/coverage.xml


push-image-souvap-notifications-api-job:
  stage: publish
  needs:
    - job: build-notifications-api
  extends:
    - .push-image-souvap
  variables:
    CI_REGISTRY_IMAGE: "$CI_REGISTRY_IMAGE/notifications-api"
    SOUVAP_IMAGE_NAME: "notifications-api"
